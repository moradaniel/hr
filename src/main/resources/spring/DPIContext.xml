<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<!-- 
		The following beans implement declarative transaction management via an AOP
		interceptor (TransactionProxyFactoryBean)
		This interceptor creates proxy classes that wrap the 'target' DAOs and
		handle hibernate sessions and transactions, 
		thus freeing the DAO code from having to implement hibernate session
		management and programmatic transaction declarations
	-->

	<!--
	 ****************************************************************************
	 
	 ****************************************************************************
	-->
	<!-- the Service Facade -->
	<bean id="departmentService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.department.DepartmentServiceImpl">
				<constructor-arg><ref local="departmentDao"/></constructor-arg>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="assureValid*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>

	<!-- the Service DAO on which the Facade relies -->
	<bean id="departmentDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.department.DepartmentDaoHibImpl">
				<property name="sessionFactory"><ref bean="hibernateSessionFactory"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	
	<bean id="creditsManagerService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.creditsManagement.CreditsManagerServiceImpl">
				<property name="sessionFactory"><ref bean="hibernateSessionFactory"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="subDepartmentService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.subDepartment.SubDepartmentServiceImpl">
				<constructor-arg><ref local="subDepartmentDao"/></constructor-arg>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="assureValid*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>

	<!-- the Service DAO on which the Facade relies -->
	<bean id="subDepartmentDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.subDepartment.SubDepartmentDaoHibImpl">
				<property name="sessionFactory"><ref bean="hibernateSessionFactory"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="personService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.person.PersonServiceImpl">
				<constructor-arg><ref local="personDao"/></constructor-arg>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="assureValid*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>

	<!-- the Service DAO on which the Facade relies -->
	<bean id="personDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.person.PersonDaoHibImpl">
				<property name="sessionFactory"><ref bean="hibernateSessionFactory"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="categoryService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.category.CategoryServiceImpl">
				<constructor-arg><ref local="categoryDao"/></constructor-arg>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="assureValid*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>

	<!-- the Service DAO on which the Facade relies -->
	<bean id="categoryDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.category.CategoryDaoHibImpl">
				<property name="sessionFactory"><ref bean="hibernateSessionFactory"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="employmentService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.employment.EmploymentServiceImpl">
				<constructor-arg><ref local="employmentDao"/></constructor-arg>
				<property name="creditsManagerService">
					<ref bean="creditsManagerService" />
				</property>
				<property name="categoryService">
					<ref bean="categoryService" />
				</property>
				<property name="personService">
					<ref bean="personService" />
				</property>
				<property name="subDepartmentService">
					<ref bean="subDepartmentService" />
				</property>
				
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="assureValid*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>

	<!-- the Service DAO on which the Facade relies -->
	<bean id="employmentDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.employment.EmploymentDaoHibImpl">
				<property name="sessionFactory"><ref bean="hibernateSessionFactory"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	
	
	<bean id="creditsEntryService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.creditsEntry.CreditsEntryServiceImpl">
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="assureValid*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="actualizar*">PROPAGATION_REQUIRED</prop>
				<prop key="change*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>

	<!-- the Service DAO on which the Facade relies -->
	<bean id="creditsEntryDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.creditsEntry.CreditsEntryDaoHibImpl">
				<property name="sessionFactory"><ref bean="hibernateSessionFactory"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="employmentCreditsEntriesService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.employment.EmploymentCreditsEntriesServiceImpl">
				
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="assureValid*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="deactivate">PROPAGATION_REQUIRED</prop>
				<prop key="promotePerson">PROPAGATION_REQUIRED</prop>
				<prop key="proposeNewEmployment">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>
	
	<bean id="creditsPeriodService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.creditsPeriod.CreditsPeriodServiceImpl">
				<constructor-arg><ref local="creditsPeriodDao"/></constructor-arg>
		
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="assureValid*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>
	
	<!-- the Service DAO on which the Facade relies -->
	<bean id="creditsPeriodDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.creditsPeriod.CreditsPeriodDaoHibImpl">
				<property name="sessionFactory"><ref bean="hibernateSessionFactory"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="occupationalGroupService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.occupationalGroup.OccupationalGroupServiceImpl">
				<constructor-arg><ref local="occupationalGroupDao"/></constructor-arg>
		
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="assureValid*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>

				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>
	
	<!-- the Service DAO on which the Facade relies -->
	<bean id="occupationalGroupDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.occupationalGroup.OccupationalGroupDaoHibImpl">
				<property name="sessionFactory"><ref bean="hibernateSessionFactory"/></property>
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="downloadService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.web.reporting.DownloadService">

			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="download*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>
	
	<bean id="exporterService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager"/></property> 
		<property name="target">
			<bean class="org.dpi.web.reporting.jasper.ExporterService">
			</bean>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="export*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>
	

	
	<!-- the Service DAO on which the Facade relies -->
	<bean id="userAccessService" class="org.dpi.security.UserAccessServiceImpl">
		<property name="dataSource">
			<ref bean="dpiDataSource"/>
		</property>
		<property name="departmentService">
			<ref bean="departmentService"/>
		</property>
		<property name="accountService">
			<ref bean="accountServiceGeneric"/>
		</property>
	</bean>

	<bean id="accountSettingsFactory" class="org.dpi.security.UserSettingsFactoryImpl"/>
	
</beans>
